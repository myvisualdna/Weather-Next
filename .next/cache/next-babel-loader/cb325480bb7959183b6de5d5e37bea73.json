{"ast":null,"code":"var _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container'; //timestamp converter\n\nfunction convertTimestamp(timestamp) {\n  var d = new Date(timestamp * 1000),\n      // Convert the passed timestamp to milliseconds\n  yyyy = d.getFullYear(),\n      mm = ('0' + (d.getMonth() + 1)).slice(-2),\n      // Months are zero based. Add leading 0.\n  dd = ('0' + d.getDate()).slice(-2),\n      // Add leading 0.\n  hh = d.getHours(),\n      h = hh,\n      min = ('0' + d.getMinutes()).slice(-2),\n      // Add leading 0.\n  ampm = 'AM',\n      time;\n\n  if (hh > 12) {\n    h = hh - 12;\n    ampm = 'PM';\n  } else if (hh === 12) {\n    h = 12;\n    ampm = 'PM';\n  } else if (hh == 0) {\n    h = 12;\n  } // ie: 2014-03-24, 3:00 PM\n\n\n  time = h + ':' + min + ' ' + ampm;\n  return time;\n}\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi); //TimeStamps\n\n  let timeSunrise = '';\n  let timeSunset = '';\n\n  if (oneSelector.hourly) {\n    timeSunrise = oneSelector.current.sunrise;\n    timeSunset = oneSelector.current.sunset;\n  } else {\n    timeSunrise = 'no data';\n  } //timestamp used\n\n\n  let convertedSunrise = convertTimestamp(timeSunrise);\n  let convertedSunset = convertTimestamp(timeSunset);\n  let details = \"\";\n\n  if (oneSelector.current) {\n    details = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Feels Like: \", Math.round(weatherSelector.main.feels_like), \" \\xB0C\"), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Humidity:  \", weatherSelector.main.humidity, \"%\"), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Wind: \", weatherSelector.wind.speed, \" km/h\"), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Clouds: \", weatherSelector.clouds.all, \"%\"), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Sunrise: \", convertedSunrise), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Sunset: \", convertedSunset), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Pressure: \", weatherSelector.main.pressure, \" hPa\"), __jsx(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Visibility: \", visibility, \" km\"));\n  } else {\n    details = \"no data\";\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Next Project - Test\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Test\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, details)));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useSelector","Head","Container","convertTimestamp","timestamp","d","Date","yyyy","getFullYear","mm","getMonth","slice","dd","getDate","hh","getHours","h","min","getMinutes","ampm","time","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","timeSunrise","timeSunset","hourly","current","sunrise","sunset","convertedSunrise","convertedSunset","details","Math","round","main","feels_like","humidity","wind","speed","clouds","all","pressure","visibility"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container';\n\n//timestamp converter\nfunction convertTimestamp(timestamp) {\n    var d = new Date(timestamp * 1000), // Convert the passed timestamp to milliseconds\n        yyyy = d.getFullYear(),\n        mm = ('0' + (d.getMonth() + 1)).slice(-2),  // Months are zero based. Add leading 0.\n        dd = ('0' + d.getDate()).slice(-2),         // Add leading 0.\n        hh = d.getHours(),\n        h = hh,\n        min = ('0' + d.getMinutes()).slice(-2),     // Add leading 0.\n        ampm = 'AM',\n        time;\n  \n    if (hh > 12) {\n        h = hh - 12;\n        ampm = 'PM';\n    } else if (hh === 12) {\n        h = 12;\n        ampm = 'PM';\n    } else if (hh == 0) {\n        h = 12;\n    }\n  \n    // ie: 2014-03-24, 3:00 PM\n    time = h + ':' + min + ' ' + ampm;\n    return time;\n  }\n  \n  \n  \n\nconst Test = () => {\n\n    //Main Hooks\n    //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi);\n\n    //TimeStamps\n    let timeSunrise = '';\n    let timeSunset = '';\n    if(oneSelector.hourly) {\n        timeSunrise = oneSelector.current.sunrise;\n        timeSunset = oneSelector.current.sunset;\n    } else {\n      timeSunrise = 'no data'\n    }\n    \n    //timestamp used\n    let convertedSunrise = convertTimestamp(timeSunrise)\n    let convertedSunset = convertTimestamp(timeSunset)\n\nlet details = \"\";\nif(oneSelector.current) {\n    details = \n    <div>\n        <h6>Feels Like: {Math.round(weatherSelector.main.feels_like)} Â°C</h6>\n        <h6>Humidity:  {weatherSelector.main.humidity}%</h6>\n        <h6>Wind: {weatherSelector.wind.speed} km/h</h6>\n        <h6>Clouds: {weatherSelector.clouds.all}%</h6>\n        <h6>Sunrise: {convertedSunrise}</h6>\n        <h6>Sunset: {convertedSunset}</h6>\n        <h6>Pressure: {weatherSelector.main.pressure} hPa</h6>\n        <h6>Visibility: {visibility} km</h6>\n    </div>\n} else {\n    details = \"no data\"\n}\n\n\n    return (\n        <div>\n            {/*Head es el titulo de la pagina en el browser */}\n            <Head>\n                <title>Next Project - Test</title>\n            </Head>\n            <Container>\n                <h1>Test</h1>\n                <h6>{details}</h6>\n                \n\n\n            </Container>\n        </div>\n    )\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}