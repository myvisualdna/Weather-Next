{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/components/navigation.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FetchOneAsync from \"../redux/actions/firstFetch\";\nimport FetchOneAsyncImperial from \"../redux/actions/firstImperial\";\nimport Link from \"next/link\";\nimport styles from \"../styles/styling.module.scss\";\n\nvar Switch = function Switch(_ref) {\n  var celsius = _ref.celsius,\n      handleToggle = _ref.handleToggle;\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    checked: celsius,\n    onChange: ToggleUnit,\n    className: styles.react_switch_checkbox,\n    id: \"react-switch-new\",\n    type: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(\"label\", {\n    style: {\n      background: celsius && \"#06D6A0\"\n    },\n    className: styles.react_switch_label,\n    htmlFor: \"react-switch-new\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.react_switch_button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n}; //Este es el header, que contiene la navigation\n//Aqui es muy largo porque contiene las funciones de busqueda de la api\n\n\n_c = Switch;\n\nvar Navigation = function Navigation() {\n  _s();\n\n  var Switch = function Switch(_ref2) {\n    var isOn = _ref2.isOn,\n        handleToggle = _ref2.handleToggle;\n    return __jsx(React.Fragment, null, __jsx(\"input\", {\n      checked: isOn,\n      onChange: ToggleUnit,\n      className: styles.react_switch_checkbox,\n      id: \"react-switch-new\",\n      type: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), __jsx(\"label\", {\n      style: {\n        background: isOn && \"#06D6A0\"\n      },\n      className: styles.react_switch_label,\n      htmlFor: \"react-switch-new\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      className: styles.react_switch_button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var _useState = useState(true),\n      celsius = _useState[0],\n      setCelsius = _useState[1]; //3. HOOKS\n  //Para fijar el parametro default para la accion\n  //Es la funcion usada para el dispatch pasandole un valor\n  //por default (en este caso Buenos Aires)\n  //UseEffect es componentDidMount\n\n\n  useEffect(function () {\n    getOneAsync(\"Portland\");\n  }, []); //2. Creamos el metodo que se va a disparar cuando subirmos\n  //algo a traves del input (2)\n\n  var getWeatherInfo = function getWeatherInfo(e) {\n    e.preventDefault();\n    var city = e.target.elements.city.value;\n\n    if (city === \"\") {\n      console.log(\"no city to search\");\n    } else {//Llamamos al creador de acciones conectado (3)\n    }\n\n    if (celsius === true) {\n      getOneAsync(city);\n    } else {\n      getOneAsyncImperial(city);\n    }\n  };\n\n  var ToggleUnit = function ToggleUnit() {\n    setCelsius(!celsius);\n  };\n\n  var theUnit = \"°C\";\n\n  if (celsius === true) {\n    theUnit === \"°C\";\n  } else {\n    theUnit === \"°F\";\n  }\n\n  console.log(celsius); //1. HOOKS\n  //Este un creador de acciones \"conectado\": es una funcion\n  //que recibe el parametro \"city\" y que cuando sea llamada\n  //Despachara (disparara) otra funcion \"fetchweather\" (que es\n  //la accion que recoge la API)\n\n  var dispatch = useDispatch(); //Debajo tenemos una funcion asyncrona (una vez ejecutada\n  //no devuelve una accion, sino otra funcion. Ver accion FetchOneAsync)\n\n  var getOneAsync = function getOneAsync(city) {\n    return dispatch(FetchOneAsync(city));\n  };\n\n  var getOneAsyncImperial = function getOneAsyncImperial(city) {\n    return dispatch(FetchOneAsyncImperial(city));\n  };\n\n  return __jsx(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-light bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"navbar-brand\",\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Navbar\"), __jsx(\"button\", {\n    className: \"navbar-toggler\",\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarSupportedContent\",\n    \"aria-controls\": \"navbarSupportedContent\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarSupportedContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"navbar-nav mr-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Home\")), __jsx(Link, {\n    href: \"/test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Today\"))), __jsx(\"form\", {\n    className: \"form-inline my-2 my-lg-0\",\n    onSubmit: getWeatherInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control mr-sm-2\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"Search City...\",\n    \"aria-label\": \"Search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-outline-success my-2 my-sm-0\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Search\"))), __jsx(\"div\", {\n    className: styles.unitStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), __jsx(Switch, {\n    isOn: celsius,\n    handleToggle: function handleToggle() {\n      return setCelsius(!celsius);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Navigation, \"PFWGaQAXiL4loxqx448xKiiSNVY=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Navigation;\nexport default Navigation;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Switch\");\n$RefreshReg$(_c2, \"Navigation\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/components/navigation.js"],"names":["React","useEffect","useState","useDispatch","FetchOneAsync","FetchOneAsyncImperial","Link","styles","Switch","celsius","handleToggle","ToggleUnit","react_switch_checkbox","background","react_switch_label","react_switch_button","Navigation","isOn","setCelsius","getOneAsync","getWeatherInfo","e","preventDefault","city","target","elements","value","console","log","getOneAsyncImperial","theUnit","dispatch","unitStyle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FetchOneAsync from \"../redux/actions/firstFetch\";\nimport FetchOneAsyncImperial from \"../redux/actions/firstImperial\";\nimport Link from \"next/link\";\nimport styles from \"../styles/styling.module.scss\";\n\nconst Switch = ({ celsius, handleToggle }) => {\n  return (\n    <>\n      <input\n        checked={celsius}\n        onChange={ToggleUnit}\n        className={styles.react_switch_checkbox}\n        id={`react-switch-new`}\n        type=\"checkbox\"\n      />\n      <label\n        style={{ background: celsius && \"#06D6A0\" }}\n        className={styles.react_switch_label}\n        htmlFor={`react-switch-new`}\n      >\n        <span className={styles.react_switch_button} />\n      </label>\n    </>\n  );\n};\n\n//Este es el header, que contiene la navigation\n//Aqui es muy largo porque contiene las funciones de busqueda de la api\n\nconst Navigation = () => {\n  const Switch = ({ isOn, handleToggle }) => {\n    return (\n      <>\n        <input\n          checked={isOn}\n          onChange={ToggleUnit}\n          className={styles.react_switch_checkbox}\n          id={`react-switch-new`}\n          type=\"checkbox\"\n        />\n        <label\n          style={{ background: isOn && \"#06D6A0\" }}\n          className={styles.react_switch_label}\n          htmlFor={`react-switch-new`}\n        >\n          <span className={styles.react_switch_button} />\n        </label>\n      </>\n    );\n  };\n\n  const [celsius, setCelsius] = useState(true);\n\n  //3. HOOKS\n  //Para fijar el parametro default para la accion\n  //Es la funcion usada para el dispatch pasandole un valor\n  //por default (en este caso Buenos Aires)\n  //UseEffect es componentDidMount\n  useEffect(() => {\n    getOneAsync(\"Portland\");\n  }, []);\n\n  //2. Creamos el metodo que se va a disparar cuando subirmos\n  //algo a traves del input (2)\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    if (city === \"\") {\n      console.log(\"no city to search\");\n    } else {\n      //Llamamos al creador de acciones conectado (3)\n    }\n    if (celsius === true) {\n      getOneAsync(city);\n    } else {\n      getOneAsyncImperial(city);\n    }\n  };\n\n  const ToggleUnit = () => {\n    setCelsius(!celsius);\n  };\n  let theUnit = \"°C\";\n  if (celsius === true) {\n    theUnit === \"°C\";\n  } else {\n    theUnit === \"°F\";\n  }\n\n  console.log(celsius);\n\n  //1. HOOKS\n  //Este un creador de acciones \"conectado\": es una funcion\n  //que recibe el parametro \"city\" y que cuando sea llamada\n  //Despachara (disparara) otra funcion \"fetchweather\" (que es\n  //la accion que recoge la API)\n  const dispatch = useDispatch();\n  //Debajo tenemos una funcion asyncrona (una vez ejecutada\n  //no devuelve una accion, sino otra funcion. Ver accion FetchOneAsync)\n  const getOneAsync = (city) => dispatch(FetchOneAsync(city));\n  const getOneAsyncImperial = (city) => dispatch(FetchOneAsyncImperial(city));\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">\n        Navbar\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {/*Los links deben tener el href que indica a que archivo de la carpeta\n            pages queremos ir (aqui vamos al home). La <a> va a contener la palabra\n            que usamos como link*/}\n          <Link href=\"/\">\n            <a className=\"nav-link\">Home</a>\n          </Link>\n\n          <Link href=\"/test\">\n            <a className=\"nav-link\">Today</a>\n          </Link>\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit={getWeatherInfo}>\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"text\"\n            name=\"city\"\n            placeholder=\"Search City...\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n      </div>\n      <div className={styles.unitStyle}>\n        <h3></h3>\n        <h3></h3>\n\n        <Switch isOn={celsius} handleToggle={() => setCelsius(!celsius)} />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}