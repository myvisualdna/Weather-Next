{"ast":null,"code":"var _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container'; //timestamp converter\n\nfunction convertTimestamp(timestamp) {\n  var d = new Date(timestamp * 1000),\n      // Convert the passed timestamp to milliseconds\n  yyyy = d.getFullYear(),\n      mm = ('0' + (d.getMonth() + 1)).slice(-2),\n      // Months are zero based. Add leading 0.\n  dd = ('0' + d.getDate()).slice(-2),\n      // Add leading 0.\n  hh = d.getHours(),\n      h = hh,\n      min = ('0' + d.getMinutes()).slice(-2),\n      // Add leading 0.\n  ampm = 'AM',\n      time;\n\n  if (hh > 12) {\n    h = hh - 12;\n    ampm = 'PM';\n  } else if (hh === 12) {\n    h = 12;\n    ampm = 'PM';\n  } else if (hh == 0) {\n    h = 12;\n  } // ie: 2014-03-24, 3:00 PM\n\n\n  time = h + ':' + min + ' ' + ampm;\n  return time;\n}\n\nconst Test = () => {\n  //Main Hooks\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneInfo.oneApi);\n  let visibility = Math.round(weatherSelector.visibility / 100) / 10; //TimeStamps\n\n  let timeSunrise = '';\n  let timeSunset = '';\n\n  if (oneSelector.hourly) {\n    timeSunrise = oneSelector.current.sunrise;\n    timeSunset = oneSelector.current.sunset;\n  } else {\n    timeSunrise = 'no data';\n  } //timestamp used\n\n\n  let convertedSunrise = convertTimestamp(timeSunrise);\n  let convertedSunset = convertTimestamp(timeSunset);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Next Project - Test\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Test\")));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useSelector","Head","Container","convertTimestamp","timestamp","d","Date","yyyy","getFullYear","mm","getMonth","slice","dd","getDate","hh","getHours","h","min","getMinutes","ampm","time","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneInfo","oneApi","visibility","Math","round","timeSunrise","timeSunset","hourly","current","sunrise","sunset","convertedSunrise","convertedSunset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container';\n\n//timestamp converter\nfunction convertTimestamp(timestamp) {\n    var d = new Date(timestamp * 1000), // Convert the passed timestamp to milliseconds\n        yyyy = d.getFullYear(),\n        mm = ('0' + (d.getMonth() + 1)).slice(-2),  // Months are zero based. Add leading 0.\n        dd = ('0' + d.getDate()).slice(-2),         // Add leading 0.\n        hh = d.getHours(),\n        h = hh,\n        min = ('0' + d.getMinutes()).slice(-2),     // Add leading 0.\n        ampm = 'AM',\n        time;\n  \n    if (hh > 12) {\n        h = hh - 12;\n        ampm = 'PM';\n    } else if (hh === 12) {\n        h = 12;\n        ampm = 'PM';\n    } else if (hh == 0) {\n        h = 12;\n    }\n  \n    // ie: 2014-03-24, 3:00 PM\n    time = h + ':' + min + ' ' + ampm;\n    return time;\n  }\n  \n  \n  \n\nconst Test = () => {\n\n      //Main Hooks\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneInfo.oneApi);\n  let visibility = Math.round((weatherSelector.visibility) / 100) / 10;\n\n  //TimeStamps\n  let timeSunrise = '';\nlet timeSunset = '';\nif(oneSelector.hourly) {\n    timeSunrise = oneSelector.current.sunrise;\n    timeSunset = oneSelector.current.sunset;\n} else {\n  timeSunrise = 'no data'\n}\n\n//timestamp used\nlet convertedSunrise = convertTimestamp(timeSunrise)\nlet convertedSunset = convertTimestamp(timeSunset)\n\n\n\n    return (\n        <div>\n            <Head>\n                <title>Next Project - Test</title>\n            </Head>\n            <Container>\n                <h1>Test</h1>\n\n                \n\n\n            </Container>\n        </div>\n    )\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}