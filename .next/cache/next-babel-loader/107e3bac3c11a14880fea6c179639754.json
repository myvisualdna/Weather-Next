{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/styling.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container';\nimport styles from '../styles/styling.module.scss';\n\nvar Styling = function Styling() {\n  _s();\n\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  var weatherSelector = useSelector(function (state) {\n    return state.weatherInfo.weatherInformation;\n  });\n  var oneSelector = useSelector(function (state) {\n    return state.oneReducer.oneApi;\n  });\n  var details = '';\n\n  if (weatherSelector.name) {\n    details = __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, weatherSelector.name, \", \", weatherSelector.sys.country), __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, Math.round(weatherSelector.main.temp), \"\\xB0\"), __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, weatherSelector.weather[0].description), __jsx(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(weatherSelector.main.feels_like), \" \\xB0C\"), __jsx(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Humidity:  \", weatherSelector.main.humidity, \"%\"), __jsx(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Wind: \", weatherSelector.wind.speed, \" km/h\"), __jsx(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Clouds: \", weatherSelector.clouds.all, \"%\"), __jsx(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Pressure: \", weatherSelector.main.pressure, \" hPa\"));\n  } else {\n    details = 'no data to show';\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Next Project - Scss Style\")), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Using scss (SASS)\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"This text has some style applied\"), details));\n};\n\n_s(Styling, \"xCplnG6SrfJ1qJMiLl96dg4mDb0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Styling;\nexport default Styling;\n\nvar _c;\n\n$RefreshReg$(_c, \"Styling\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/styling.js"],"names":["React","useSelector","Head","Container","styles","Styling","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","details","name","sys","country","Math","round","main","temp","weather","description","feels_like","humidity","wind","speed","clouds","all","pressure"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAEd;AACJ;AACF,MAAMC,eAAe,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAN,CAAkBC,kBAAtB;AAAA,GAAN,CAAnC;AACA,MAAMC,WAAW,GAAGT,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACI,UAAN,CAAiBC,MAArB;AAAA,GAAN,CAA/B;AAEA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAGP,eAAe,CAACQ,IAAnB,EAAyB;AACrBD,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,eAAe,CAACQ,IAArB,QAA6BR,eAAe,CAACS,GAAhB,CAAoBC,OAAjD,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IAAI,CAACC,KAAL,CAAWZ,eAAe,CAACa,IAAhB,CAAqBC,IAAhC,CADL,SAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKd,eAAe,CAACe,OAAhB,CAAwB,CAAxB,EAA2BC,WADhC,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBL,IAAI,CAACC,KAAL,CAAWZ,eAAe,CAACa,IAAhB,CAAqBI,UAAhC,CAAjB,WARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBjB,eAAe,CAACa,IAAhB,CAAqBK,QAArC,MATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWlB,eAAe,CAACmB,IAAhB,CAAqBC,KAAhC,UAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAapB,eAAe,CAACqB,MAAhB,CAAuBC,GAApC,MAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAetB,eAAe,CAACa,IAAhB,CAAqBU,QAApC,SAZJ,CADF;AAeH,GAhBD,MAgBO;AACHhB,IAAAA,OAAO,GAAG,iBAAV;AACH;;AAEC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAFJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,EAGKA,OAHL,CALJ,CADJ;AAaH,CAzCD;;GAAMR,O;UAIoBJ,W,EACJA,W;;;KALhBI,O;AA2CN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container';\nimport styles from '../styles/styling.module.scss';\n\n\nconst Styling = () => {\n\n        //Main Hooks\n    //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi);\n\n  let details = '';\n  if(weatherSelector.name) {\n      details =\n        <div>\n            <h1>{weatherSelector.name}, {weatherSelector.sys.country}</h1>\n            <h4>\n                {Math.round(weatherSelector.main.temp)}°\n            </h4>\n            <h4>\n                {weatherSelector.weather[0].description}\n            </h4>\n            <h6>Feels Like: {Math.round(weatherSelector.main.feels_like)} °C</h6>\n            <h6>Humidity:  {weatherSelector.main.humidity}%</h6>\n            <h6>Wind: {weatherSelector.wind.speed} km/h</h6>\n            <h6>Clouds: {weatherSelector.clouds.all}%</h6>\n            <h6>Pressure: {weatherSelector.main.pressure} hPa</h6>\n        </div>\n  } else {\n      details = 'no data to show'\n  }\n\n    return (\n        <div>\n            {/*Head es el titulo de la pagina en el browser */}\n            <Head>\n                <title>Next Project - Scss Style</title>\n            </Head>\n            <Container>\n                <h1>Using scss (SASS)</h1>\n                <p>This text has some style applied</p>\n                {details}\n            </Container>\n        </div>\n    )\n}\n\nexport default Styling;\n"]},"metadata":{},"sourceType":"module"}