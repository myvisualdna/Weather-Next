{"ast":null,"code":"var _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi); //TimeStamps\n\n  let timeSunrise = \"\";\n  let timeSunset = \"\";\n\n  if (oneSelector.hourly) {\n    timeSunrise = oneSelector.current.sunrise;\n    timeSunset = oneSelector.current.sunset;\n  } else {\n    timeSunrise = \"no data\";\n  } //timestamp used\n\n\n  let convertedSunrise = convertTimestamp(timeSunrise);\n  let convertedSunset = convertTimestamp(timeSunset);\n  let details = \"\";\n\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    details = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.divWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, weatherSelector.name, \", \", weatherSelector.sys.country)), __jsx(\"div\", {\n      className: styles.boxOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, oneSelector.daily.slice(0, 5).map(weather => __jsx(\"div\", {\n      key: weather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Feels Like: \", weather.feels_like.day), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Temp. Min: \", weather.temp.min), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Temp. Max: \", weather.temp.max), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Conditions: \", weather.weather[0].description), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Clouds: \", weather.clouds, \" %\"))))));\n  } else {\n    details = \"no data\";\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Next Project - Test\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Test\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, details)));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useSelector","Head","Container","styles","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","timeSunrise","timeSunset","hourly","current","sunrise","sunset","convertedSunrise","convertTimestamp","convertedSunset","details","weatherIconOne","daily","weather","icon","divWeather","name","sys","country","boxOrder","slice","map","box","iconStyle","feels_like","day","temp","min","max","description","clouds"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(\n    (state) => state.weatherInfo.weatherInformation\n  );\n  const oneSelector = useSelector((state) => state.oneReducer.oneApi);\n\n  //TimeStamps\n  let timeSunrise = \"\";\n  let timeSunset = \"\";\n  if (oneSelector.hourly) {\n    timeSunrise = oneSelector.current.sunrise;\n    timeSunset = oneSelector.current.sunset;\n  } else {\n    timeSunrise = \"no data\";\n  }\n\n  //timestamp used\n  let convertedSunrise = convertTimestamp(timeSunrise);\n  let convertedSunset = convertTimestamp(timeSunset);\n\n  let details = \"\";\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    details = (\n      <div>\n        <div className={styles.divWeather}>\n          <h1>\n            {weatherSelector.name}, {weatherSelector.sys.country}\n          </h1>\n        </div>\n        <div className={styles.boxOrder}>\n          {oneSelector.daily.slice(0, 5).map((weather) => (\n            <div key={weather}>\n              <div className={styles.box}>\n                <h2>Day</h2>\n                <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n                <p>Feels Like: {weather.feels_like.day}</p>\n                <p>Temp. Min: {weather.temp.min}</p>\n                <p>Temp. Max: {weather.temp.max}</p>\n                <p>Conditions: {weather.weather[0].description}</p>\n                <p>Clouds: {weather.clouds} %</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    details = \"no data\";\n  }\n\n  return (\n    <div>\n      {/*Head es el titulo de la pagina en el browser */}\n      <Head>\n        <title>Next Project - Test</title>\n      </Head>\n      <Container>\n        <h1>Test</h1>\n        <h6>{details}</h6>\n      </Container>\n    </div>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}