{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { userRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nvar Test = function Test() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  var weatherSelector = useSelector(function (state) {\n    return state.weatherInfo.weatherInformation;\n  });\n  var oneSelector = useSelector(function (state) {\n    return state.oneReducer.oneApi;\n  });\n  var unitImperial = \" °C\";\n\n  if (weatherSelector.imperial === true) {\n    unitImperial = \" °F\";\n  } else {}\n\n  console.log(unitImperial);\n\n  function getWeekDay(date) {\n    //Create an array containing each day, starting with Sunday.\n    var weekdays = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"); //Use the getDay() method to get the day.\n\n    var day = date.getDay(); //Return the element that corresponds to that index.\n\n    return weekdays[day];\n  } //The current weekday in a text format.\n\n\n  var date = new Date();\n  var weekDay = getWeekDay(date);\n  console.log(\"The current weekday is \" + weekDay); //What weekday is tomorrow?\n\n  var dayOne = new Date();\n  dayOne.setDate(dayOne.getDate() + 1);\n  var One = getWeekDay(dayOne); //What weekday is tomorrow?\n\n  var dayTwo = new Date();\n  dayTwo.setDate(dayTwo.getDate() + 2);\n  var Two = getWeekDay(dayTwo); //What weekday is tomorrow?\n\n  var dayThree = new Date();\n  dayThree.setDate(dayThree.getDate() + 3);\n  var Three = getWeekDay(dayThree); //What weekday is tomorrow?\n\n  var dayFour = new Date();\n  dayFour.setDate(dayFour.getDate() + 4);\n  var Four = getWeekDay(dayFour); //What weekday is tomorrow?\n\n  var dayFive = new Date();\n  dayFive.setDate(dayFive.getDate() + 5);\n  var Five = getWeekDay(dayFive);\n\n  var Index = function Index(_ref) {\n    var id = _ref.id;\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }, id);\n  };\n\n  var ndex = function ndex() {\n    _s();\n\n    var router = useRouter();\n    var id = router.query.id;\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    }, id);\n  };\n\n  _s(ndex, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", true);\n\n  var details = \"\";\n\n  if (oneSelector.current) {\n    var weatherIconOne = \"http://openweathermap.org/img/wn/\".concat(oneSelector.daily[0].weather[0].icon, \".png\");\n    var weatherIconTwo = \"http://openweathermap.org/img/wn/\".concat(oneSelector.daily[1].weather[0].icon, \".png\");\n    var weatherIconThree = \"http://openweathermap.org/img/wn/\".concat(oneSelector.daily[2].weather[0].icon, \".png\");\n    var weatherIconFour = \"http://openweathermap.org/img/wn/\".concat(oneSelector.daily[3].weather[0].icon, \".png\");\n    var weatherIconFive = \"http://openweathermap.org/img/wn/\".concat(oneSelector.daily[4].weather[0].icon, \".png\");\n    details = __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.divWeather,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, weatherSelector.name, \", \", weatherSelector.sys.country)), __jsx(\"div\", {\n      className: styles.boxDetails,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, weekDay), __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, Math.round(weatherSelector.main.temp), \" \", unitImperial, \",\", \" \", weatherSelector.weather[0].description))), __jsx(\"div\", {\n      className: styles.boxOrder,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.box,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, One), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[0].feels_like.day), unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[0].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[0].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[0].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, Two), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[1].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[1].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[1].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[1].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, Three), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[2].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[2].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[2].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[2].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, Four), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[3].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[3].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[3].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[3].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, Five), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[4].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[4].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[4].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[4].weather[0].description))));\n  } else {\n    details = \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Daily Weather\")), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, details));\n};\n\n_s2(Test, \"xCplnG6SrfJ1qJMiLl96dg4mDb0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useState","useSelector","userRouter","Head","Container","styles","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","unitImperial","imperial","console","log","getWeekDay","date","weekdays","Array","day","getDay","Date","weekDay","dayOne","setDate","getDate","One","dayTwo","Two","dayThree","Three","dayFour","Four","dayFive","Five","Index","id","ndex","router","useRouter","query","details","current","weatherIconOne","daily","weather","icon","weatherIconTwo","weatherIconThree","weatherIconFour","weatherIconFive","divWeather","name","sys","country","boxDetails","Math","round","main","temp","description","boxOrder","box","iconStyle","feels_like","min","max"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { userRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(\n    (state) => state.weatherInfo.weatherInformation\n  );\n  const oneSelector = useSelector((state) => state.oneReducer.oneApi);\n\n  let unitImperial = \" °C\";\n  if (weatherSelector.imperial === true) {\n    unitImperial = \" °F\";\n  } else {\n  }\n  console.log(unitImperial);\n\n  function getWeekDay(date) {\n    //Create an array containing each day, starting with Sunday.\n    var weekdays = new Array(\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    );\n    //Use the getDay() method to get the day.\n    var day = date.getDay();\n    //Return the element that corresponds to that index.\n    return weekdays[day];\n  }\n\n  //The current weekday in a text format.\n  var date = new Date();\n  var weekDay = getWeekDay(date);\n  console.log(\"The current weekday is \" + weekDay);\n\n  //What weekday is tomorrow?\n  var dayOne = new Date();\n  dayOne.setDate(dayOne.getDate() + 1);\n  var One = getWeekDay(dayOne);\n\n  //What weekday is tomorrow?\n  var dayTwo = new Date();\n  dayTwo.setDate(dayTwo.getDate() + 2);\n  var Two = getWeekDay(dayTwo);\n\n  //What weekday is tomorrow?\n  var dayThree = new Date();\n  dayThree.setDate(dayThree.getDate() + 3);\n  var Three = getWeekDay(dayThree);\n\n  //What weekday is tomorrow?\n  var dayFour = new Date();\n  dayFour.setDate(dayFour.getDate() + 4);\n  var Four = getWeekDay(dayFour);\n\n  //What weekday is tomorrow?\n  var dayFive = new Date();\n  dayFive.setDate(dayFive.getDate() + 5);\n  var Five = getWeekDay(dayFive);\n\n  const Index = ({ id }) => {\n    return <div>{id}</div>;\n  };\n\n  let ndex = () => {\n    const router = useRouter();\n    const { id } = router.query;\n\n    return <div>{id}</div>;\n  };\n\n  let details = \"\";\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    let weatherIconTwo = `http://openweathermap.org/img/wn/${oneSelector.daily[1].weather[0].icon}.png`;\n    let weatherIconThree = `http://openweathermap.org/img/wn/${oneSelector.daily[2].weather[0].icon}.png`;\n    let weatherIconFour = `http://openweathermap.org/img/wn/${oneSelector.daily[3].weather[0].icon}.png`;\n    let weatherIconFive = `http://openweathermap.org/img/wn/${oneSelector.daily[4].weather[0].icon}.png`;\n    details = (\n      <div>\n        <div className={styles.divWeather}>\n          <div>\n            <h1>\n              {weatherSelector.name}, {weatherSelector.sys.country}\n            </h1>\n          </div>\n\n          <div className={styles.boxDetails}>\n            <h2>{weekDay}</h2>\n            <h3>\n              {Math.round(weatherSelector.main.temp)} {unitImperial},{\" \"}\n              {weatherSelector.weather[0].description}\n            </h3>\n          </div>\n        </div>\n        <div className={styles.boxOrder}>\n          <div className={styles.box}>\n            <h2>{One}</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[0].feels_like.day)}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[0].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[0].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[0].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>{Two}</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[1].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[1].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[1].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[1].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>{Three}</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[2].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[2].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[2].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[2].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>{Four}</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[3].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[3].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[3].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[3].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>{Five}</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[4].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[4].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[4].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[4].weather[0].description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    details = \"Loading...\";\n  }\n\n  return (\n    <div>\n      {/*Head es el titulo de la pagina en el browser */}\n      <Head>\n        <title>Daily Weather</title>\n      </Head>\n      <Container>\n        {details}\n      </Container>\n    </div>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}