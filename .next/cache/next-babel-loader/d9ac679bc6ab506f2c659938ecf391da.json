{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; //Definimos el API KEY que necesitamos\n\nvar API_KEY = \"35b09d50704a6a177c25bda05c32f780\"; //Exportamos el type\n\nexport var FETCH_ONE = 'FETCH_ONE'; //Definimos el action creator y le pasamos city\n//para que pueda usarlo axios.get\n\nexport default function FetchOneApi(_x, _x2) {\n  return _FetchOneApi.apply(this, arguments);\n}\n_c2 = FetchOneApi;\n\nfunction _FetchOneApi() {\n  _FetchOneApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(lat, lon) {\n    var request;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat, \"&lon=\").concat(lon, \"&exclude={part}&appid=\").concat(API_KEY, \"&units=metric\"));\n\n          case 2:\n            request = _context.sent;\n            return _context.abrupt(\"return\", function (dispatch) {\n              request.then(function (_ref) {\n                var data = _ref.data;\n                dispatch({\n                  type: \"FETCH_ONE\",\n                  payload: data\n                });\n                console.log(data);\n              });\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _FetchOneApi.apply(this, arguments);\n}\n\n_c = FetchOneApi;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FetchOneApi\");\n$RefreshReg$(_c2, \"FetchOneApi\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/redux/actions/fetchOne.js"],"names":["axios","API_KEY","FETCH_ONE","FetchOneApi","lat","lon","get","request","dispatch","then","data","type","payload","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AACA,OAAO,IAAMC,SAAS,GAAG,WAAlB,C,CAEP;AACA;;AACA,wBAA8BC,WAA9B;AAAA;AAAA;MAA8BA,W;;;0EAAf,iBAA2BC,GAA3B,EAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWL,KAAK,CAACM,GAAN,+DAAiEF,GAAjE,kBAA4EC,GAA5E,mCAAwGJ,OAAxG,mBADX;;AAAA;AACLM,YAAAA,OADK;AAAA,6CAUJ,UAACC,QAAD,EAAc;AACjBD,cAAAA,OAAO,CAACE,IAAR,CAAa,gBAAY;AAAA,oBAAVC,IAAU,QAAVA,IAAU;AACrBF,gBAAAA,QAAQ,CAAC;AAACG,kBAAAA,IAAI,EAAE,WAAP;AAAoBC,kBAAAA,OAAO,EAAEF;AAA7B,iBAAD,CAAR;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,eAHD;AAIH,aAfU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeP,W","sourcesContent":["import axios from \"axios\";\n\n//Definimos el API KEY que necesitamos\nconst API_KEY = \"35b09d50704a6a177c25bda05c32f780\";\n//Exportamos el type\nexport const FETCH_ONE = 'FETCH_ONE';\n\n//Definimos el action creator y le pasamos city\n//para que pueda usarlo axios.get\nexport default async function FetchOneApi(lat, lon) {\n    const request = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude={part}&appid=${API_KEY}&units=metric`\n        );\n        \n\n    //Lo levantado por la API se llamara data.\n    //Se dispara una accion llamada FETCH_WEATHER que de ser\n    //admitida por el reducer modificara el state con lo que\n    //contenga el payload: es decir data, es decir lo levantado\n    //por la API\n    return (dispatch) => {\n        request.then(({data}) => {\n            dispatch({type: \"FETCH_ONE\", payload: data})\n            console.log(data);\n        });\n    };\n}\n\n"]},"metadata":{},"sourceType":"module"}