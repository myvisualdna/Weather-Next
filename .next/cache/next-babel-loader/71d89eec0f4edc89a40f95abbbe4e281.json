{"ast":null,"code":"var _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi);\n  let unitImperial = \" °C\";\n\n  if (weatherSelector.imperial === true) {\n    unitImperial = \" °F\";\n  } else {}\n\n  console.log(unitImperial);\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  var weekDay = getWeekDay(tomorrow);\n  console.log('Tomorrow will be a ' + weekDay);\n  let details = \"\";\n\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    let weatherIconTwo = `http://openweathermap.org/img/wn/${oneSelector.daily[1].weather[0].icon}.png`;\n    let weatherIconThree = `http://openweathermap.org/img/wn/${oneSelector.daily[2].weather[0].icon}.png`;\n    let weatherIconFour = `http://openweathermap.org/img/wn/${oneSelector.daily[3].weather[0].icon}.png`;\n    let weatherIconFive = `http://openweathermap.org/img/wn/${oneSelector.daily[4].weather[0].icon}.png`;\n    details = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.divWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, weatherSelector.name, \", \", weatherSelector.sys.country)), __jsx(\"div\", {\n      className: styles.boxDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, Math.round(weatherSelector.main.temp), \" \", unitImperial), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, weatherSelector.weather[0].description))), __jsx(\"div\", {\n      className: styles.boxOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[0].feels_like.day), unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[0].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[0].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[0].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[1].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[1].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[1].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[1].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[2].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[2].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[2].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[2].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[3].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[3].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[3].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[3].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[4].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[4].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[4].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[4].weather[0].description))));\n  } else {\n    details = \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Daily Weather\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, details)));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useState","useSelector","Head","Container","styles","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","unitImperial","imperial","console","log","tomorrow","Date","setDate","getDate","weekDay","getWeekDay","details","current","weatherIconOne","daily","weather","icon","weatherIconTwo","weatherIconThree","weatherIconFour","weatherIconFive","divWeather","name","sys","country","boxDetails","Math","round","main","temp","description","boxOrder","box","iconStyle","feels_like","day","min","max"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(\n    (state) => state.weatherInfo.weatherInformation\n  );\n  const oneSelector = useSelector((state) => state.oneReducer.oneApi);\n\n  let unitImperial = \" °C\";\n  if (weatherSelector.imperial === true) {\n    unitImperial = \" °F\";\n  } else {\n  }\n  console.log(unitImperial);\n\n  var tomorrow = new Date();\ntomorrow.setDate(tomorrow.getDate() + 1);\nvar weekDay = getWeekDay(tomorrow);\nconsole.log('Tomorrow will be a ' + weekDay);\n\n  let details = \"\";\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    let weatherIconTwo = `http://openweathermap.org/img/wn/${oneSelector.daily[1].weather[0].icon}.png`;\n    let weatherIconThree = `http://openweathermap.org/img/wn/${oneSelector.daily[2].weather[0].icon}.png`;\n    let weatherIconFour = `http://openweathermap.org/img/wn/${oneSelector.daily[3].weather[0].icon}.png`;\n    let weatherIconFive = `http://openweathermap.org/img/wn/${oneSelector.daily[4].weather[0].icon}.png`;\n    details = (\n      <div>\n        <div className={styles.divWeather}>\n          <div>\n            <h1>\n              {weatherSelector.name}, {weatherSelector.sys.country}\n            </h1>\n          </div>\n\n          <div className={styles.boxDetails}>\n            <h3>\n              {Math.round(weatherSelector.main.temp)} {unitImperial}\n            </h3>\n            <h3>{weatherSelector.weather[0].description}</h3>\n          </div>\n        </div>\n        <div className={styles.boxOrder}>\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[0].feels_like.day)}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[0].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[0].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[0].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[1].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[1].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[1].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[1].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[2].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[2].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[2].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[2].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[3].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[3].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[3].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[3].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[4].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[4].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[4].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[4].weather[0].description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    details = \"Loading...\";\n  }\n\n  return (\n    <div>\n      {/*Head es el titulo de la pagina en el browser */}\n      <Head>\n        <title>Daily Weather</title>\n      </Head>\n      <Container>\n        <h1>{details}</h1>\n      </Container>\n    </div>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}