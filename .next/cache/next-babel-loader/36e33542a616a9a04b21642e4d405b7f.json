{"ast":null,"code":"var _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/components/navigation.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FetchOneAsync from \"../redux/actions/firstFetch\";\nimport FetchOneAsyncImperial from \"../redux/actions/firstImperial\";\nimport Link from \"next/link\";\nimport styles from \"../styles/styling.module.scss\";\nimport axios from \"axios\";\n\nconst Switch = ({\n  celsius,\n  handleToggle\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    checked: celsius,\n    onChange: ToggleUnit,\n    className: styles.react_switch_checkbox,\n    id: `react-switch-new`,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), __jsx(\"label\", {\n    style: {\n      background: celsius && \"#06D6A0\"\n    },\n    className: styles.react_switch_label,\n    htmlFor: `react-switch-new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: styles.react_switch_button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst Navigation = () => {\n  const myAPI = \"ba5bdbde96da5e11cab5be14c6342e0f\";\n\n  const Switch = ({\n    isOn,\n    handleToggle\n  }) => {\n    return __jsx(React.Fragment, null, __jsx(\"input\", {\n      checked: isOn,\n      onChange: ToggleUnit,\n      className: styles.react_switch_checkbox,\n      id: `react-switch-new`,\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), __jsx(\"label\", {\n      style: {\n        background: isOn && \"#06D6A0\"\n      },\n      className: styles.react_switch_label,\n      htmlFor: `react-switch-new`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      className: styles.react_switch_button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const {\n    0: celsius,\n    1: setCelsius\n  } = useState(true); //3. HOOKS\n  //Para fijar el parametro default para la accion\n  //Es la funcion usada para el dispatch pasandole un valor\n  //por default (en este caso Buenos Aires)\n  //UseEffect es componentDidMount\n\n  useEffect(() => {\n    const request = axios.get(`http://api.ipapi.com/check?access_key=ba5bdbde96da5e11cab5be14c6342e0f`);\n    console.log(request.data);\n    getOneAsync(\"Portland\");\n  }, []); //2. Creamos el metodo que se va a disparar cuando subirmos\n  //algo a traves del input (2)\n\n  const getWeatherInfo = e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n    if (city === \"\") {\n      console.log(\"no city to search\");\n    } else {//Llamamos al creador de acciones conectado (3)\n    }\n\n    if (celsius === true) {\n      getOneAsync(city);\n    } else {\n      getOneAsyncImperial(city);\n    }\n  };\n\n  const ToggleUnit = () => {\n    setCelsius(!celsius);\n  };\n\n  let theUnit = \"°C\";\n\n  if (celsius === true) {\n    theUnit === \"°C\";\n  } else {\n    theUnit === \"°F\";\n  }\n\n  console.log(celsius); //1. HOOKS\n  //Este un creador de acciones \"conectado\": es una funcion\n  //que recibe el parametro \"city\" y que cuando sea llamada\n  //Despachara (disparara) otra funcion \"fetchweather\" (que es\n  //la accion que recoge la API)\n\n  const dispatch = useDispatch(); //Debajo tenemos una funcion asyncrona (una vez ejecutada\n  //no devuelve una accion, sino otra funcion. Ver accion FetchOneAsync)\n\n  const getOneAsync = city => dispatch(FetchOneAsync(city));\n\n  const getOneAsyncImperial = city => dispatch(FetchOneAsyncImperial(city));\n\n  return __jsx(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-light bg-light justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"navbar-brand\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Weather App\"), __jsx(\"button\", {\n    className: \"navbar-toggler\",\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarSupportedContent\",\n    \"aria-controls\": \"navbarSupportedContent\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarSupportedContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"navbar-nav mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Home\")), __jsx(Link, {\n    href: \"/test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Daily\"))), __jsx(\"form\", {\n    className: \"form-inline my-2 my-lg-0\",\n    onSubmit: getWeatherInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    className: styles.inputStyle,\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"Search City...\",\n    \"aria-label\": \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: styles.btn,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Search\"), __jsx(\"div\", {\n    className: styles.unitStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"\\xB0F\"), __jsx(Switch, {\n    isOn: celsius,\n    handleToggle: () => setCelsius(!celsius),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"\\xB0C\")))));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/components/navigation.js"],"names":["React","useEffect","useState","useDispatch","FetchOneAsync","FetchOneAsyncImperial","Link","styles","axios","Switch","celsius","handleToggle","ToggleUnit","react_switch_checkbox","background","react_switch_label","react_switch_button","Navigation","myAPI","isOn","setCelsius","request","get","console","log","data","getOneAsync","getWeatherInfo","e","preventDefault","city","target","elements","value","getOneAsyncImperial","theUnit","dispatch","inputStyle","btn","unitStyle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FetchOneAsync from \"../redux/actions/firstFetch\";\nimport FetchOneAsyncImperial from \"../redux/actions/firstImperial\";\nimport Link from \"next/link\";\nimport styles from \"../styles/styling.module.scss\";\nimport axios from \"axios\";\n\nconst Switch = ({ celsius, handleToggle }) => {\n  return (\n    <>\n      <input\n        checked={celsius}\n        onChange={ToggleUnit}\n        className={styles.react_switch_checkbox}\n        id={`react-switch-new`}\n        type=\"checkbox\"\n      />\n      <label\n        style={{ background: celsius && \"#06D6A0\" }}\n        className={styles.react_switch_label}\n        htmlFor={`react-switch-new`}\n      >\n        <span className={styles.react_switch_button} />\n      </label>\n    </>\n  );\n};\n\nconst Navigation = () => {\n  const myAPI = \"ba5bdbde96da5e11cab5be14c6342e0f\";\n\n  const Switch = ({ isOn, handleToggle }) => {\n    return (\n      <>\n        <input\n          checked={isOn}\n          onChange={ToggleUnit}\n          className={styles.react_switch_checkbox}\n          id={`react-switch-new`}\n          type=\"checkbox\"\n        />\n        <label\n          style={{ background: isOn && \"#06D6A0\" }}\n          className={styles.react_switch_label}\n          htmlFor={`react-switch-new`}\n        >\n          <span className={styles.react_switch_button} />\n        </label>\n      </>\n    );\n  };\n\n  const [celsius, setCelsius] = useState(true);\n\n  //3. HOOKS\n  //Para fijar el parametro default para la accion\n  //Es la funcion usada para el dispatch pasandole un valor\n  //por default (en este caso Buenos Aires)\n  //UseEffect es componentDidMount\n  useEffect(() => {\n    const request = axios.get(\n      `http://api.ipapi.com/check?access_key=ba5bdbde96da5e11cab5be14c6342e0f`\n    );\n    console.log(request.data);\n    getOneAsync(\"Portland\");\n  }, []);\n\n  //2. Creamos el metodo que se va a disparar cuando subirmos\n  //algo a traves del input (2)\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    if (city === \"\") {\n      console.log(\"no city to search\");\n    } else {\n      //Llamamos al creador de acciones conectado (3)\n    }\n    if (celsius === true) {\n      getOneAsync(city);\n    } else {\n      getOneAsyncImperial(city);\n    }\n  };\n\n  const ToggleUnit = () => {\n    setCelsius(!celsius);\n  };\n  let theUnit = \"°C\";\n  if (celsius === true) {\n    theUnit === \"°C\";\n  } else {\n    theUnit === \"°F\";\n  }\n\n  console.log(celsius);\n\n  //1. HOOKS\n  //Este un creador de acciones \"conectado\": es una funcion\n  //que recibe el parametro \"city\" y que cuando sea llamada\n  //Despachara (disparara) otra funcion \"fetchweather\" (que es\n  //la accion que recoge la API)\n  const dispatch = useDispatch();\n  //Debajo tenemos una funcion asyncrona (una vez ejecutada\n  //no devuelve una accion, sino otra funcion. Ver accion FetchOneAsync)\n  const getOneAsync = (city) => dispatch(FetchOneAsync(city));\n  const getOneAsyncImperial = (city) => dispatch(FetchOneAsyncImperial(city));\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\">\n      <a className=\"navbar-brand\" href=\"#\">\n        Weather App\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {/*Los links deben tener el href que indica a que archivo de la carpeta\n            pages queremos ir (aqui vamos al home). La <a> va a contener la palabra\n            que usamos como link*/}\n          <Link href=\"/\">\n            <a className=\"nav-link\">Home</a>\n          </Link>\n\n          <Link href=\"/test\">\n            <a className=\"nav-link\">Daily</a>\n          </Link>\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit={getWeatherInfo}>\n          <input\n            className={styles.inputStyle}\n            type=\"text\"\n            name=\"city\"\n            placeholder=\"Search City...\"\n            aria-label=\"Search\"\n          />\n          <button className={styles.btn} type=\"submit\">\n            Search\n          </button>\n          <div className={styles.unitStyle}>\n            <h3>°F</h3>\n            <Switch isOn={celsius} handleToggle={() => setCelsius(!celsius)} />\n            <h3>°C</h3>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}