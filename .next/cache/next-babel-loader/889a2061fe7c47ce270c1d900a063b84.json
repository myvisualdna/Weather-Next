{"ast":null,"code":"var _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi);\n  let unitImperial = \" °C\";\n\n  if (weatherSelector.imperial === true) {\n    unitImperial = \" °F\";\n  } else {}\n\n  console.log(unitImperial);\n\n  function getWeekDay(date) {\n    //Create an array containing each day, starting with Sunday.\n    var weekdays = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"); //Use the getDay() method to get the day.\n\n    var day = date.getDay(); //Return the element that corresponds to that index.\n\n    return weekdays[day];\n  } //The current weekday in a text format.\n\n\n  var date = new Date();\n  var weekDay = getWeekDay(date);\n  console.log(\"The current weekday is \" + weekDay); //What weekday is tomorrow?\n\n  var dayOne = new Date();\n  dayOne.setDate(dayOne.getDate() + 1);\n  var One = getWeekDay(dayOne);\n  console.log(\"Tomorrow will be a \" + One); //What weekday is tomorrow?\n\n  var dayTwo = new Date();\n  dayTwo.setDate(dayTwo.getDate() + 2);\n  var Two = getWeekDay(dayTwo);\n  console.log(\"After Tomorrow will be a \" + Two); //What weekday is tomorrow?\n\n  var dayThree = new Date();\n  dayThree.setDate(dayThree.getDate() + 3);\n  var Three = getWeekDay(dayThree);\n  console.log(\"After Tomorrow will be a \" + Three); //What weekday is tomorrow?\n\n  var dayFour = new Date();\n  dayFour.setDate(dayFour.getDate() + 4);\n  var Four = getWeekDay(dayFour);\n  console.log(\"After Tomorrow will be a \" + Four); //What weekday is tomorrow?\n\n  var dayFive = new Date();\n  dayFive.setDate(dayFive.getDate() + 5);\n  var Five = getWeekDay(dayFive);\n  console.log(\"After Tomorrow will be a \" + Five);\n  let details = \"\";\n\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    let weatherIconTwo = `http://openweathermap.org/img/wn/${oneSelector.daily[1].weather[0].icon}.png`;\n    let weatherIconThree = `http://openweathermap.org/img/wn/${oneSelector.daily[2].weather[0].icon}.png`;\n    let weatherIconFour = `http://openweathermap.org/img/wn/${oneSelector.daily[3].weather[0].icon}.png`;\n    let weatherIconFive = `http://openweathermap.org/img/wn/${oneSelector.daily[4].weather[0].icon}.png`;\n    details = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: styles.divWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, weatherSelector.name, \", \", weatherSelector.sys.country)), __jsx(\"div\", {\n      className: styles.boxDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, Math.round(weatherSelector.main.temp), \" \", unitImperial), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, weatherSelector.weather[0].description))), __jsx(\"div\", {\n      className: styles.boxOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[0].feels_like.day), unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[0].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[0].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[0].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[1].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[1].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[1].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[1].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[2].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[2].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[2].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[2].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[3].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[3].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[3].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[3].weather[0].description)), __jsx(\"div\", {\n      className: styles.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(\"img\", {\n      className: styles.iconStyle,\n      src: weatherIconOne,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"Feels Like: \", Math.round(oneSelector.daily[4].feels_like.day), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, \"Temp. Min: \", Math.round(oneSelector.daily[4].temp.min), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"Temp. Max: \", Math.round(oneSelector.daily[4].temp.max), \" \", unitImperial), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"Conditions: \", oneSelector.daily[4].weather[0].description))));\n  } else {\n    details = \"Loading...\";\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Daily Weather\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, details)));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useState","useSelector","Head","Container","styles","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","unitImperial","imperial","console","log","getWeekDay","date","weekdays","Array","day","getDay","Date","weekDay","dayOne","setDate","getDate","One","dayTwo","Two","dayThree","Three","dayFour","Four","dayFive","Five","details","current","weatherIconOne","daily","weather","icon","weatherIconTwo","weatherIconThree","weatherIconFour","weatherIconFive","divWeather","name","sys","country","boxDetails","Math","round","main","temp","description","boxOrder","box","iconStyle","feels_like","min","max"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA;AACA,QAAMC,eAAe,GAAGL,WAAW,CAChCM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,kBADI,CAAnC;AAGA,QAAMC,WAAW,GAAGT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACI,UAAN,CAAiBC,MAA7B,CAA/B;AAEA,MAAIC,YAAY,GAAG,KAAnB;;AACA,MAAIP,eAAe,CAACQ,QAAhB,KAA6B,IAAjC,EAAuC;AACrCD,IAAAA,YAAY,GAAG,KAAf;AACD,GAFD,MAEO,CACN;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AAEA,WAASI,UAAT,CAAoBC,IAApB,EAA0B;AACxB;AACA,QAAIC,QAAQ,GAAG,IAAIC,KAAJ,CACb,QADa,EAEb,QAFa,EAGb,SAHa,EAIb,WAJa,EAKb,UALa,EAMb,QANa,EAOb,UAPa,CAAf,CAFwB,CAWxB;;AACA,QAAIC,GAAG,GAAGH,IAAI,CAACI,MAAL,EAAV,CAZwB,CAaxB;;AACA,WAAOH,QAAQ,CAACE,GAAD,CAAf;AACD,GA9BgB,CAgCjB;;;AACA,MAAIH,IAAI,GAAG,IAAIK,IAAJ,EAAX;AACA,MAAIC,OAAO,GAAGP,UAAU,CAACC,IAAD,CAAxB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BQ,OAAxC,EAnCiB,CAqCjB;;AACA,MAAIC,MAAM,GAAG,IAAIF,IAAJ,EAAb;AACAE,EAAAA,MAAM,CAACC,OAAP,CAAeD,MAAM,CAACE,OAAP,KAAmB,CAAlC;AACA,MAAIC,GAAG,GAAGX,UAAU,CAACQ,MAAD,CAApB;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBY,GAApC,EAzCiB,CA2CjB;;AACA,MAAIC,MAAM,GAAG,IAAIN,IAAJ,EAAb;AACAM,EAAAA,MAAM,CAACH,OAAP,CAAeG,MAAM,CAACF,OAAP,KAAmB,CAAlC;AACA,MAAIG,GAAG,GAAGb,UAAU,CAACY,MAAD,CAApB;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8Bc,GAA1C,EA/CiB,CAiDjB;;AACA,MAAIC,QAAQ,GAAG,IAAIR,IAAJ,EAAf;AACAQ,EAAAA,QAAQ,CAACL,OAAT,CAAiBK,QAAQ,CAACJ,OAAT,KAAqB,CAAtC;AACA,MAAIK,KAAK,GAAGf,UAAU,CAACc,QAAD,CAAtB;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BgB,KAA1C,EArDiB,CAuDjB;;AACA,MAAIC,OAAO,GAAG,IAAIV,IAAJ,EAAd;AACAU,EAAAA,OAAO,CAACP,OAAR,CAAgBO,OAAO,CAACN,OAAR,KAAoB,CAApC;AACA,MAAIO,IAAI,GAAGjB,UAAU,CAACgB,OAAD,CAArB;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BkB,IAA1C,EA3DiB,CA6DjB;;AACA,MAAIC,OAAO,GAAG,IAAIZ,IAAJ,EAAd;AACAY,EAAAA,OAAO,CAACT,OAAR,CAAgBS,OAAO,CAACR,OAAR,KAAoB,CAApC;AACA,MAAIS,IAAI,GAAGnB,UAAU,CAACkB,OAAD,CAArB;AACApB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BoB,IAA1C;AAEA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAI3B,WAAW,CAAC4B,OAAhB,EAAyB;AACvB,QAAIC,cAAc,GAAI,oCAAmC7B,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCC,IAAK,MAA9F;AACA,QAAIC,cAAc,GAAI,oCAAmCjC,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCC,IAAK,MAA9F;AACA,QAAIE,gBAAgB,GAAI,oCAAmClC,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCC,IAAK,MAAhG;AACA,QAAIG,eAAe,GAAI,oCAAmCnC,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCC,IAAK,MAA/F;AACA,QAAII,eAAe,GAAI,oCAAmCpC,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCC,IAAK,MAA/F;AACAL,IAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAAC2C,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzC,eAAe,CAAC0C,IADnB,QAC2B1C,eAAe,CAAC2C,GAAhB,CAAoBC,OAD/C,CADF,CADF,EAOE;AAAK,MAAA,SAAS,EAAE9C,MAAM,CAAC+C,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACC,KAAL,CAAW/C,eAAe,CAACgD,IAAhB,CAAqBC,IAAhC,CADH,OAC2C1C,YAD3C,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,eAAe,CAACmC,OAAhB,CAAwB,CAAxB,EAA2Be,WAAhC,CAJF,CAPF,CADF,EAeE;AAAK,MAAA,SAAS,EAAEpD,MAAM,CAACqD,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAErD,MAAM,CAACsD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,SAAS,EAAEtD,MAAM,CAACuD,SAAvB;AAAkC,MAAA,GAAG,EAAEpB,cAAvC;AAAuD,MAAA,GAAG,EAAC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACea,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBoB,UAArB,CAAgCvC,GAA3C,CADf,EAEGR,YAFH,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BM,GAArC,CADd,EACyD,GADzD,EAEGhD,YAFH,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BO,GAArC,CADd,EACyD,GADzD,EAEGjD,YAFH,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBH,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCe,WAAhD,CAfF,CADF,EAmBE;AAAK,MAAA,SAAS,EAAEpD,MAAM,CAACsD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,SAAS,EAAEtD,MAAM,CAACuD,SAAvB;AAAkC,MAAA,GAAG,EAAEpB,cAAvC;AAAuD,MAAA,GAAG,EAAC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACea,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBoB,UAArB,CAAgCvC,GAA3C,CADf,EACgE,GADhE,EAEGR,YAFH,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BM,GAArC,CADd,EACyD,GADzD,EAEGhD,YAFH,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BO,GAArC,CADd,EACyD,GADzD,EAEGjD,YAFH,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBH,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCe,WAAhD,CAfF,CAnBF,EAqCE;AAAK,MAAA,SAAS,EAAEpD,MAAM,CAACsD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,SAAS,EAAEtD,MAAM,CAACuD,SAAvB;AAAkC,MAAA,GAAG,EAAEpB,cAAvC;AAAuD,MAAA,GAAG,EAAC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACea,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBoB,UAArB,CAAgCvC,GAA3C,CADf,EACgE,GADhE,EAEGR,YAFH,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BM,GAArC,CADd,EACyD,GADzD,EAEGhD,YAFH,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BO,GAArC,CADd,EACyD,GADzD,EAEGjD,YAFH,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBH,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCe,WAAhD,CAfF,CArCF,EAuDE;AAAK,MAAA,SAAS,EAAEpD,MAAM,CAACsD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,SAAS,EAAEtD,MAAM,CAACuD,SAAvB;AAAkC,MAAA,GAAG,EAAEpB,cAAvC;AAAuD,MAAA,GAAG,EAAC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACea,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBoB,UAArB,CAAgCvC,GAA3C,CADf,EACgE,GADhE,EAEGR,YAFH,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BM,GAArC,CADd,EACyD,GADzD,EAEGhD,YAFH,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BO,GAArC,CADd,EACyD,GADzD,EAEGjD,YAFH,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBH,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCe,WAAhD,CAfF,CAvDF,EAyEE;AAAK,MAAA,SAAS,EAAEpD,MAAM,CAACsD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAK,MAAA,SAAS,EAAEtD,MAAM,CAACuD,SAAvB;AAAkC,MAAA,GAAG,EAAEpB,cAAvC;AAAuD,MAAA,GAAG,EAAC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACea,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBoB,UAArB,CAAgCvC,GAA3C,CADf,EACgE,GADhE,EAEGR,YAFH,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BM,GAArC,CADd,EACyD,GADzD,EAEGhD,YAFH,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACcuC,IAAI,CAACC,KAAL,CAAW3C,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBe,IAArB,CAA0BO,GAArC,CADd,EACyD,GADzD,EAEGjD,YAFH,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBH,WAAW,CAAC8B,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CAA6B,CAA7B,EAAgCe,WAAhD,CAfF,CAzEF,CAfF,CADF;AA6GD,GAnHD,MAmHO;AACLnB,IAAAA,OAAO,GAAG,YAAV;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFF,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,CADF,CALF,CADF;AAWD,CAtMD;;AAwMA,eAAehC,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport Container from \"../components/container\";\nimport styles from \"../styles/index.module.scss\";\n\nconst Test = () => {\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(\n    (state) => state.weatherInfo.weatherInformation\n  );\n  const oneSelector = useSelector((state) => state.oneReducer.oneApi);\n\n  let unitImperial = \" °C\";\n  if (weatherSelector.imperial === true) {\n    unitImperial = \" °F\";\n  } else {\n  }\n  console.log(unitImperial);\n\n  function getWeekDay(date) {\n    //Create an array containing each day, starting with Sunday.\n    var weekdays = new Array(\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    );\n    //Use the getDay() method to get the day.\n    var day = date.getDay();\n    //Return the element that corresponds to that index.\n    return weekdays[day];\n  }\n\n  //The current weekday in a text format.\n  var date = new Date();\n  var weekDay = getWeekDay(date);\n  console.log(\"The current weekday is \" + weekDay);\n\n  //What weekday is tomorrow?\n  var dayOne = new Date();\n  dayOne.setDate(dayOne.getDate() + 1);\n  var One = getWeekDay(dayOne);\n  console.log(\"Tomorrow will be a \" + One);\n\n  //What weekday is tomorrow?\n  var dayTwo = new Date();\n  dayTwo.setDate(dayTwo.getDate() + 2);\n  var Two = getWeekDay(dayTwo);\n  console.log(\"After Tomorrow will be a \" + Two);\n\n  //What weekday is tomorrow?\n  var dayThree = new Date();\n  dayThree.setDate(dayThree.getDate() + 3);\n  var Three = getWeekDay(dayThree);\n  console.log(\"After Tomorrow will be a \" + Three);\n\n  //What weekday is tomorrow?\n  var dayFour = new Date();\n  dayFour.setDate(dayFour.getDate() + 4);\n  var Four = getWeekDay(dayFour);\n  console.log(\"After Tomorrow will be a \" + Four);\n\n  //What weekday is tomorrow?\n  var dayFive = new Date();\n  dayFive.setDate(dayFive.getDate() + 5);\n  var Five = getWeekDay(dayFive);\n  console.log(\"After Tomorrow will be a \" + Five);\n\n  let details = \"\";\n  if (oneSelector.current) {\n    let weatherIconOne = `http://openweathermap.org/img/wn/${oneSelector.daily[0].weather[0].icon}.png`;\n    let weatherIconTwo = `http://openweathermap.org/img/wn/${oneSelector.daily[1].weather[0].icon}.png`;\n    let weatherIconThree = `http://openweathermap.org/img/wn/${oneSelector.daily[2].weather[0].icon}.png`;\n    let weatherIconFour = `http://openweathermap.org/img/wn/${oneSelector.daily[3].weather[0].icon}.png`;\n    let weatherIconFive = `http://openweathermap.org/img/wn/${oneSelector.daily[4].weather[0].icon}.png`;\n    details = (\n      <div>\n        <div className={styles.divWeather}>\n          <div>\n            <h1>\n              {weatherSelector.name}, {weatherSelector.sys.country}\n            </h1>\n          </div>\n\n          <div className={styles.boxDetails}>\n            <h3>\n              {Math.round(weatherSelector.main.temp)} {unitImperial}\n            </h3>\n            <h3>{weatherSelector.weather[0].description}</h3>\n          </div>\n        </div>\n        <div className={styles.boxOrder}>\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[0].feels_like.day)}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[0].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[0].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[0].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[1].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[1].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[1].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[1].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[2].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[2].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[2].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[2].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[3].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[3].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[3].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[3].weather[0].description}</p>\n          </div>\n\n          <div className={styles.box}>\n            <h2>Day</h2>\n            <img className={styles.iconStyle} src={weatherIconOne} alt=\"\" />\n            <p>\n              Feels Like: {Math.round(oneSelector.daily[4].feels_like.day)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Min: {Math.round(oneSelector.daily[4].temp.min)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>\n              Temp. Max: {Math.round(oneSelector.daily[4].temp.max)}{\" \"}\n              {unitImperial}\n            </p>\n            <p>Conditions: {oneSelector.daily[4].weather[0].description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    details = \"Loading...\";\n  }\n\n  return (\n    <div>\n      {/*Head es el titulo de la pagina en el browser */}\n      <Head>\n        <title>Daily Weather</title>\n      </Head>\n      <Container>\n        <h1>{details}</h1>\n      </Container>\n    </div>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}