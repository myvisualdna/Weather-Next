{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/components/navigation.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FetchOneAsync from \"../redux/actions/firstFetch\";\nimport Link from \"next/link\"; //Este es el header, que contiene la navigation\n//Aqui es muy largo porque contiene las funciones de busqueda de la api\n\nvar Navigation = function Navigation() {\n  _s();\n\n  var _useState = useState(\"C\"),\n      unit = _useState[0],\n      setUnit = _useState[1]; //3. HOOKS\n  //Para fijar el parametro default para la accion\n  //Es la funcion usada para el dispatch pasandole un valor\n  //por default (en este caso Buenos Aires)\n  //UseEffect es componentDidMount\n\n\n  useEffect(function () {\n    getOneAsync(\"Portland\");\n  }, []); //2. Creamos el metodo que se va a disparar cuando subirmos\n  //algo a traves del input (2)\n\n  var getWeatherInfo = function getWeatherInfo(e) {\n    e.preventDefault();\n    var city = e.target.elements.city.value;\n\n    if (city === \"\") {\n      console.log(\"no city to search\");\n    } else {\n      //Llamamos al creador de acciones conectado (3)\n      getOneAsync(city);\n    }\n  }; //1. HOOKS\n  //Este un creador de acciones \"conectado\": es una funcion\n  //que recibe el parametro \"city\" y que cuando sea llamada\n  //Despachara (disparara) otra funcion \"fetchweather\" (que es\n  //la accion que recoge la API)\n\n\n  var dispatch = useDispatch(); //Debajo tenemos una funcion asyncrona (una vez ejecutada\n  //no devuelve una accion, sino otra funcion. Ver accion FetchOneAsync)\n\n  var getOneAsync = function getOneAsync(city) {\n    return dispatch(FetchOneAsync(city));\n  };\n\n  return __jsx(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-light bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"navbar-brand\",\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Navbar\"), __jsx(\"button\", {\n    className: \"navbar-toggler\",\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarSupportedContent\",\n    \"aria-controls\": \"navbarSupportedContent\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarSupportedContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"navbar-nav mr-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Home\")), __jsx(Link, {\n    href: \"/test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Today\")), __jsx(Link, {\n    href: \"/styling\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Styling\")), __jsx(Link, {\n    href: \"/therouter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Router\")), __jsx(\"li\", {\n    className: \"nav-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"nav-link disabled\",\n    href: \"#\",\n    tabIndex: -1,\n    \"aria-disabled\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Disabled\"))), __jsx(\"form\", {\n    className: \"form-inline my-2 my-lg-0\",\n    onSubmit: getWeatherInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control mr-sm-2\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"Search City...\",\n    \"aria-label\": \"Search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-outline-success my-2 my-sm-0\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Search\"))));\n};\n\n_s(Navigation, \"sKHwm8x2uZ0ZCf8IPHwGJ8bI28Q=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/components/navigation.js"],"names":["React","useEffect","useState","useDispatch","FetchOneAsync","Link","Navigation","unit","setUnit","getOneAsync","getWeatherInfo","e","preventDefault","city","target","elements","value","console","log","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AACA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACCJ,QAAQ,CAAC,GAAD,CADT;AAAA,MAChBK,IADgB;AAAA,MACVC,OADU,iBAGvB;AACA;AACA;AACA;AACA;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,WAAW,CAAC,UAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT,CARuB,CAYvB;AACA;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;;AACA,QAAIH,IAAI,KAAK,EAAb,EAAiB;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAFD,MAEO;AACL;AACAT,MAAAA,WAAW,CAACI,IAAD,CAAX;AACD;AACF,GATD,CAduB,CAyBvB;AACA;AACA;AACA;AACA;;;AACA,MAAMM,QAAQ,GAAGhB,WAAW,EAA5B,CA9BuB,CA+BvB;AACA;;AACA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACI,IAAD;AAAA,WAAUM,QAAQ,CAACf,aAAa,CAACS,IAAD,CAAd,CAAlB;AAAA,GAApB;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,IAAI,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,mBAAY,UAHd;AAIE,mBAAY,yBAJd;AAKE,qBAAc,wBALhB;AAME,qBAAc,OANhB;AAOE,kBAAW,mBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJF,EAeE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,EAAE,EAAC,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJF,EAQE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CARF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAXF,EAcE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAdF,EAkBE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,qBAAc,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAlBF,CADF,EA8BE;AAAM,IAAA,SAAS,EAAC,0BAAhB;AAA2C,IAAA,QAAQ,EAAEH,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,gBAJd;AAKE,kBAAW,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CA9BF,CAfF,CADF;AAgED,CAnGD;;GAAMJ,U;UA8BaH,W;;;KA9BbG,U;AAqGN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FetchOneAsync from \"../redux/actions/firstFetch\";\nimport Link from \"next/link\";\n\n//Este es el header, que contiene la navigation\n//Aqui es muy largo porque contiene las funciones de busqueda de la api\n\nconst Navigation = () => {\n  const [unit, setUnit] = useState(\"C\");\n\n  //3. HOOKS\n  //Para fijar el parametro default para la accion\n  //Es la funcion usada para el dispatch pasandole un valor\n  //por default (en este caso Buenos Aires)\n  //UseEffect es componentDidMount\n  useEffect(() => {\n    getOneAsync(\"Portland\");\n  }, []);\n\n  //2. Creamos el metodo que se va a disparar cuando subirmos\n  //algo a traves del input (2)\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    if (city === \"\") {\n      console.log(\"no city to search\");\n    } else {\n      //Llamamos al creador de acciones conectado (3)\n      getOneAsync(city);\n    }\n  };\n\n  //1. HOOKS\n  //Este un creador de acciones \"conectado\": es una funcion\n  //que recibe el parametro \"city\" y que cuando sea llamada\n  //Despachara (disparara) otra funcion \"fetchweather\" (que es\n  //la accion que recoge la API)\n  const dispatch = useDispatch();\n  //Debajo tenemos una funcion asyncrona (una vez ejecutada\n  //no devuelve una accion, sino otra funcion. Ver accion FetchOneAsync)\n  const getOneAsync = (city) => dispatch(FetchOneAsync(city));\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">\n        Navbar\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {/*Los links deben tener el href que indica a que archivo de la carpeta\n            pages queremos ir (aqui vamos al home). La <a> va a contener la palabra\n            que usamos como link*/}\n          <Link href=\"/\">\n            <a className=\"nav-link\">Home</a>\n          </Link>\n\n          <Link href=\"/test\">\n            <a className=\"nav-link\">Today</a>\n          </Link>\n          <Link href=\"/styling\">\n            <a className=\"nav-link\">Styling</a>\n          </Link>\n          <Link href=\"/therouter\">\n            <a className=\"nav-link\">Router</a>\n          </Link>\n\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link disabled\"\n              href=\"#\"\n              tabIndex={-1}\n              aria-disabled=\"true\"\n            >\n              Disabled\n            </a>\n          </li>\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit={getWeatherInfo}>\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"text\"\n            name=\"city\"\n            placeholder=\"Search City...\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}