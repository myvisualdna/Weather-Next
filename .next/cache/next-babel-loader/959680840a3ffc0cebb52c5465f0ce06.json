{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andresnieves/Documents/React/arietis/pages/test.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container'; //timestamp converter\n\nfunction convertTimestamp(timestamp) {\n  var d = new Date(timestamp * 1000),\n      // Convert the passed timestamp to milliseconds\n  yyyy = d.getFullYear(),\n      mm = ('0' + (d.getMonth() + 1)).slice(-2),\n      // Months are zero based. Add leading 0.\n  dd = ('0' + d.getDate()).slice(-2),\n      // Add leading 0.\n  hh = d.getHours(),\n      h = hh,\n      min = ('0' + d.getMinutes()).slice(-2),\n      // Add leading 0.\n  ampm = 'AM',\n      time;\n\n  if (hh > 12) {\n    h = hh - 12;\n    ampm = 'PM';\n  } else if (hh === 12) {\n    h = 12;\n    ampm = 'PM';\n  } else if (hh == 0) {\n    h = 12;\n  } // ie: 2014-03-24, 3:00 PM\n\n\n  time = h + ':' + min + ' ' + ampm;\n  return time;\n}\n\nvar Test = function Test() {\n  _s();\n\n  //Main Hooks\n  //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  var weatherSelector = useSelector(function (state) {\n    return state.weatherInfo.weatherInformation;\n  });\n  var oneSelector = useSelector(function (state) {\n    return state.oneReducer.oneApi;\n  });\n  var details = \"\";\n\n  if (oneSelector.current) {\n    details = __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, __jsx(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Feels Like: \", Math.round(weatherSelector.main.feels_like), \" \\xB0C\"));\n  } else {\n    details = \"no data\";\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Next Project - Test\")), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Test\"), __jsx(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, details)));\n};\n\n_s(Test, \"xCplnG6SrfJ1qJMiLl96dg4mDb0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/arietis/pages/test.js"],"names":["React","useSelector","Head","Container","convertTimestamp","timestamp","d","Date","yyyy","getFullYear","mm","getMonth","slice","dd","getDate","hh","getHours","h","min","getMinutes","ampm","time","Test","weatherSelector","state","weatherInfo","weatherInformation","oneSelector","oneReducer","oneApi","details","current","Math","round","main","feels_like"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;;AACA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACjC,MAAIC,CAAC,GAAG,IAAIC,IAAJ,CAASF,SAAS,GAAG,IAArB,CAAR;AAAA,MAAoC;AAChCG,EAAAA,IAAI,GAAGF,CAAC,CAACG,WAAF,EADX;AAAA,MAEIC,EAAE,GAAG,CAAC,OAAOJ,CAAC,CAACK,QAAF,KAAe,CAAtB,CAAD,EAA2BC,KAA3B,CAAiC,CAAC,CAAlC,CAFT;AAAA,MAEgD;AAC5CC,EAAAA,EAAE,GAAG,CAAC,MAAMP,CAAC,CAACQ,OAAF,EAAP,EAAoBF,KAApB,CAA0B,CAAC,CAA3B,CAHT;AAAA,MAGgD;AAC5CG,EAAAA,EAAE,GAAGT,CAAC,CAACU,QAAF,EAJT;AAAA,MAKIC,CAAC,GAAGF,EALR;AAAA,MAMIG,GAAG,GAAG,CAAC,MAAMZ,CAAC,CAACa,UAAF,EAAP,EAAuBP,KAAvB,CAA6B,CAAC,CAA9B,CANV;AAAA,MAMgD;AAC5CQ,EAAAA,IAAI,GAAG,IAPX;AAAA,MAQIC,IARJ;;AAUA,MAAIN,EAAE,GAAG,EAAT,EAAa;AACTE,IAAAA,CAAC,GAAGF,EAAE,GAAG,EAAT;AACAK,IAAAA,IAAI,GAAG,IAAP;AACH,GAHD,MAGO,IAAIL,EAAE,KAAK,EAAX,EAAe;AAClBE,IAAAA,CAAC,GAAG,EAAJ;AACAG,IAAAA,IAAI,GAAG,IAAP;AACH,GAHM,MAGA,IAAIL,EAAE,IAAI,CAAV,EAAa;AAChBE,IAAAA,CAAC,GAAG,EAAJ;AACH,GAnBgC,CAqBjC;;;AACAI,EAAAA,IAAI,GAAGJ,CAAC,GAAG,GAAJ,GAAUC,GAAV,GAAgB,GAAhB,GAAsBE,IAA7B;AACA,SAAOC,IAAP;AACD;;AAKH,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAEf;AACA;AACF,MAAMC,eAAe,GAAGtB,WAAW,CAAC,UAAAuB,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAN,CAAkBC,kBAAtB;AAAA,GAAN,CAAnC;AACA,MAAMC,WAAW,GAAG1B,WAAW,CAAC,UAAAuB,KAAK;AAAA,WAAIA,KAAK,CAACI,UAAN,CAAiBC,MAArB;AAAA,GAAN,CAA/B;AAEF,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAGH,WAAW,CAACI,OAAf,EAAwB;AACpBD,IAAAA,OAAO,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBE,IAAI,CAACC,KAAL,CAAWV,eAAe,CAACW,IAAhB,CAAqBC,UAAhC,CAAjB,WADJ,CADA;AAIH,GALD,MAKO;AACHL,IAAAA,OAAO,GAAG,SAAV;AACH;;AAGG,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAII,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,CAFJ,CAJJ,CADJ;AAcH,CAhCD;;GAAMR,I;UAIoBrB,W,EACJA,W;;;KALhBqB,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport Container from '../components/container';\n\n//timestamp converter\nfunction convertTimestamp(timestamp) {\n    var d = new Date(timestamp * 1000), // Convert the passed timestamp to milliseconds\n        yyyy = d.getFullYear(),\n        mm = ('0' + (d.getMonth() + 1)).slice(-2),  // Months are zero based. Add leading 0.\n        dd = ('0' + d.getDate()).slice(-2),         // Add leading 0.\n        hh = d.getHours(),\n        h = hh,\n        min = ('0' + d.getMinutes()).slice(-2),     // Add leading 0.\n        ampm = 'AM',\n        time;\n  \n    if (hh > 12) {\n        h = hh - 12;\n        ampm = 'PM';\n    } else if (hh === 12) {\n        h = 12;\n        ampm = 'PM';\n    } else if (hh == 0) {\n        h = 12;\n    }\n  \n    // ie: 2014-03-24, 3:00 PM\n    time = h + ':' + min + ' ' + ampm;\n    return time;\n  }\n  \n  \n  \n\nconst Test = () => {\n\n    //Main Hooks\n    //Nombre del selector = useSelector(state = state.nombreDelReducer.NombreDelObjetoDentroDelStateDondeSeInyectaLaInfoNueva)\n  const weatherSelector = useSelector(state => state.weatherInfo.weatherInformation);\n  const oneSelector = useSelector(state => state.oneReducer.oneApi);\n\nlet details = \"\";\nif(oneSelector.current) {\n    details = \n    <div>\n        <h6>Feels Like: {Math.round(weatherSelector.main.feels_like)} Â°C</h6>\n    </div>\n} else {\n    details = \"no data\"\n}\n\n\n    return (\n        <div>\n            <Head>\n                <title>Next Project - Test</title>\n            </Head>\n            <Container>\n                <h1>Test</h1>\n                <h6>{details}</h6>\n                \n\n\n            </Container>\n        </div>\n    )\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}